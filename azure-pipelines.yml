# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master
- develop
- weatherforcast_barchart_implementation

#Unless you specify pr triggers pull request builds are automatically enabled for all branches
#pr:
#- master
#- feature/*

pool:
  vmImage: 'macOS-10.14'

variables:
- group: android-build-variables

steps:
  - publish:bin
    artifact: binaries
#- task: VersionAssemblies@2
#  inputs:
#    sourcePath: '$(Build.SourcesDirectory)/app/manifests'
#    versionCode: 1
#    versionCodeOffset: '1'
#    versionName: 'SampleWeatherForcastApp'
#    printFile: true
#  - task: SonarCloudPrepare@1
#    inputs:
#     SonarCloud: 'SonarCloud'
#     organization: 'navinbangar'
#     scannerMode: 'Other'
#     extraProperties: |
#      # Additional properties that will be passed to the scanner,
#      # Put one key=value per line, example:
#        sonar.login=84f834bb3ee3de5c0bc3ae60280e05a93289a9b6
#        sonar.exclusions=**/*.bin
#        sonar.projectName=sampleweatherforcastapplicationkey
#        sonar.organization=navinbangar
#        sonar.projectKey=sampleweatherforcastapplicationkey
#        sonar.coverage.jacoco.xmlReportPaths=CCReport43F6D5EF/summary.xml
 
 # - task: SonarCloudPrepare@1
 #   inputs:
 #    SonarCloud: 'SonarCloud'
 #     organization: 'navinkumarbangar'
 #     scannerMode: 'Other'
 #     extraProperties: |
 #         sonar.exclusions=**/*.bin
 #         sonar.projectName=sampleweatherforcast
 #         sonar.projectKey=sampleweatherforcast
 #         sonar.coverage.jacoco.xmlReportPaths=CCReport43F6D5EF/summary.xml

  # Build Task- Android project build with Gradle .
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      checkStyleRunAnalysis: true
      findBugsRunAnalysis: true
      pmdRunAnalysis: true
      publishJUnitResults: true
#      sqAnalysisEnabled: true
#      sqGradlePluginVersionChoice: specify
#      sqGradlePluginVersion: 2.6.1
      tasks: 'assembleRelease'

  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      tasks: 'assembleRelease test'
    displayName: gradlew assembleRelease test


  # Build  Android project in Release mode with Gradle.
#- task: Gradle@2
#  inputs:
#    workingDirectory: ''
#    gradleWrapperFile: 'gradlew'
#    checkStyleRunAnalysis: true
#    findBugsRunAnalysis: true
#    pmdRunAnalysis: true
#    publishJUnitResults: false
#    tasks: 'assembleRelease'

## sign Android apk
  - task: AndroidSigning@3
    inputs:
      apkFiles: '**/*.apk'
      apksign: true
      apksignerKeystoreFile: SampleWeatherKeyStore.jks
      apksignerKeystorePassword: $(keystorePassword)
      apksignerKeystoreAlias: $(keyAlias)
      apksignerKeyPassword: $(keyPassword)
      apksignerArguments: --out $(Build.SourcesDirectory)/app/build/outputs/SampleWeatherApp.apk
      zipalign: true
    displayName: App signing task

# Copies all apk files into artifact directory
  - task: CopyFiles@2
    inputs:
      contents: '**/*.apk'
      targetFolder: '$(build.artifactStagingDirectory)'

# Publish all apk files into artifact apk-file directory
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(build.artifactStagingDirectory)/app/build/outputs/'
      artifactName: 'apk-files'
      artifactType: 'container'

#  - task: Cache@2
#    inputs:
#     key: 'gradle | "$(Agent.OS)"'
#     restoreKeys: gradle
#     path: $(gradleUserHome)
#     displayName: Gradle build cache
#
#  - script: |
#     ./gradlew --build-cache build
#      # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
#     ./gradlew --stop

  #Distribute the app on App center
  - task: AppCenterDistribute@3
    inputs:
      serverEndpoint: 'SampleWeatherForcastApplicationAppCenter'
      appSlug: 'naveen.bangar27-gmail.com/SampleWeatherApp'
      appFile: '$(Build.SourcesDirectory)/app/build/outputs/SampleWeatherApp.apk' # Relative path from the repo root to the APK or IPA file you want to publish
      symbolsOption: 'Android'
      releaseNotesOption: 'input'
      releaseNotesInput: 'SampleWeatherApp First version.'
      destinationType: 'groups'
      destinationGroupIds: '6c2f931d-d656-4190-b475-0f9f7fcf9da2'

#  - task: SonarCloudAnalyze@1
#
#  - task: SonarCloudPublish@1
#    inputs:
#      pollingTimeoutSec: '300'

#- task: SonarQubePrepare@4
#  inputs:
#    SonarQube: 'SampleWeatherAppSonar'
#    projectKey: 'SampleWeatherForcast'
#    projectName: 'SampleWeatherForcast'
#    projectVersion: 'assembleRelease'
#    displayName: 'Prepare analysis on SonarQube'
#    extraProperties: |
#      sonar.organization=naveenbangar27
#      sonar.branch.name=weatherforcast_barchart_implementation
