
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master
- develop
- weatherforcast_barchart_implementation

#Unless you specify pr triggers pull request builds are automatically enabled for all branches
#pr:
#- master
#- feature/*

pool:
  vmImage: 'macOS-10.14'

variables:
- group: android-build-variables
   version.MajorMinor:'5.5' # Manually adjust the version number as needed for semantic versioning. Revision is auto-incremented.
   version.Revision:$[counter(variables[$(buildNumber))], 0)]
   versionNumber:'$(version.MajorMinor).$(version.Revision)'

steps:
- task: PowerShell@2
  displayName: Set the name of the build (i.e. the Build.BuildNumber)
  inputs:
    targetType: 'inline'
    script: |
      [string] $buildName = "$(versionNumber)"
      Write-Host "Setting the name of the build to '$buildName'."
      Write-Host "##vso[build.updatebuildnumber]$buildName"
#  - task: SonarCloudPrepare@
#    inputs:
#      SonarCloud: 'SonarCloud'
#      organization: 'naveenbangar27'
#      scannerMode: 'Other'
#      extraProperties: |
#          sonar.exclusions=**/*.bin
#          sonar.projectName=SampleWeatherForcast
#          sonar.projectKey=SampleWeatherForcast
#          sonar.coverage.jacoco.xmlReportPaths=CCReport43F6D5EF/summary.xml
 

# Version Number Increment Task- Increase build number with each release.-5.5.${versionCode}
  - task: VersionAssemblies@2
     inputs:
      Path: '$(Build.SourcesDirectory)'
      VersionNumber: '$(versionNumber)'
      InjectVersion: true
      FilenamePattern: 'AssemblyInfo.*'
      OutputVersion: 'OutputedVersion'

# Build Task- Android project build with Gradle.
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      checkStyleRunAnalysis: true
      findBugsRunAnalysis: true
      pmdRunAnalysis: true
      publishJUnitResults: true
      tasks: 'assembleDebug assembleDebugAndroidTest assembleRelease test'

#  - task: SonarCloudPublish@1
#    inputs:
#      pollingTimeoutSec: '300'

  # Build  Android project in Release mode with Gradle.
#- task: Gradle@2
#  inputs:
#    workingDirectory: ''
#    gradleWrapperFile: 'gradlew'
#    checkStyleRunAnalysis: true
#    findBugsRunAnalysis: true
#    pmdRunAnalysis: true
#    publishJUnitResults: false
#    tasks: 'assembleRelease'

## sign Android apk
  - task: AndroidSigning@3
    inputs:
      apkFiles: '**/*.apk'
      zipalign: false
      apksign: true
      apksignerKeystoreFile: SampleWeatherKeyStore.jks
      apksignerKeystorePassword: $(keystorePassword)
      apksignerKeystoreAlias: $(keyAlias)
      apksignerKeyPassword: $(keyPassword)
      apksignerArguments: --out $(Build.SourcesDirectory)/app/build/outputs/SampleWeatherApp.apk
    displayName: App align and signing task

# Copies all apk files into artifact directory
  - task: CopyFiles@2
    inputs:
      contents: '**/*.apk'
      targetFolder: '$(build.artifactStagingDirectory)'

# Publish all apk files into artifact apk-file directory
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(build.artifactStagingDirectory)/app/build/outputs/'
      artifactName: 'apk-files'
      artifactType: 'container'

  - task: AppCenterTest@1
    inputs:
      appFile: 'app/build/outputs/apk/debug/app-debug.apk'
      artifactsDirectory: '$(Build.ArtifactStagingDirectory)/AppCenterTest'
      espressoBuildDir: 'app/build/outputs/apk/androidTest/debug'
      frameworkOption: 'espresso'
      credentialsOption: 'serviceEndpoint'
      serverEndpoint: 'SampleWeatherForcastApplicationAppCenter'
      appSlug: 'naveen.bangar27-gmail.com/SampleWeatherApp'
      devices: 'naveen.bangar27-gmail.com/MotoOneVision'
      localeOption: 'en_US'
      showDebugOutput: true

  #Distribute the app on App center
  - task: AppCenterDistribute@3
    inputs:
      serverEndpoint: 'SampleWeatherForcastApplicationAppCenter'
      appSlug: 'naveen.bangar27-gmail.com/SampleWeatherApp'
      appFile: '$(Build.SourcesDirectory)/app/build/outputs/SampleWeatherApp.apk' # Relative path from the repo root to the APK or IPA file you want to publish
      symbolsOption: 'Android'
      releaseNotesOption: 'input'
      releaseNotesInput: 'SampleWeatherApp First version.'
      destinationType: 'groups'
      destinationGroupIds: '6c2f931d-d656-4190-b475-0f9f7fcf9da2'


#- task: SonarQubePrepare@4
#  inputs:
#    SonarQube: 'SampleWeatherAppSonar'
#    projectKey: 'SampleWeatherForcast'
#    projectName: 'SampleWeatherForcast'
#    projectVersion: 'assembleRelease'
#    displayName: 'Prepare analysis on SonarQube'
#    extraProperties: |
#      sonar.organization=naveenbangar27
#      sonar.branch.name=weatherforcast_barchart_implementation
